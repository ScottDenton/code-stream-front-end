{"version":3,"sources":["components/StreamCard.js","components/FollowButton.js","components/Jumbotron.js","components/Stream.js","components/Home.js","components/SignUp.js","components/NavBar.js","components/VideoJumbotron.js","components/VideoStreams.js","components/UserShow.js","components/UserEdit.js","App.js","serviceWorker.js","index.js"],"names":["Stream","_this","this","stream","props","user_name","toLowerCase","image_url","concat","react_default","a","createElement","className","onClick","handleClickOnStream","src","alt","href","title","React","Component","FollowButton","name","followedUsers","includes","handleUnFollowClick","handleFollowClick","Jumbotron","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderFollowButton","loggedIn","FollowButton_FollowButton","react_twitch_embed_video_default","channel","react_router_dom","to","user_id","viewer_count","setJumbotron","setState","jumbotronStream","document","getElementById","children","renderStreams","arr","map","StreamCard","key","renderIndividualFave","obj","values","keys","counter","vidarr","id","state","streams","favoritesVideos","game_id","_this2","fetch","then","resp","json","data","body","user","username","password","method","headers","Accept","Content-Type","JSON","stringify","streamArray","slice","components_Jumbotron","loggedInUser","faveVids","Home","components_Stream","SignUp","handleChange","e","defineProperty","target","value","handleSubmit","preventDefault","res","setLoggedInUser","history","push","onSubmit","action","placeholder","type","onChange","dismountSignUp","NavBar","catch","error","console","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","signOut","htmlFor","VideoJumbotron","log","video","VideoStream","videos","jumbotronToDisplay","components_VideoJumbotron","UserShow","fetchThisUsersData","handle","match","params","VideoStreams","UserEdit","handleUsernameChange","deleteUser","alert","editFormToRender","submitChangeUsername","App","fetchFavorites","usernames","favorite","followed_username","fetchFavoriteVideos","findVideosByUsername","length","users","foundUser","find","twitch_id","newUsername","updatedUser","followed_name","toConsumableArray","favorites","fave","filter","Fragment","react_router","path","render","components_NavBar","assign","exact","components_Home","components_SignUp","components_UserShow","UserEdit_UserEdit","Boolean","window","location","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sRAwBeA,0LApBH,IAAAC,EAAAC,KACFC,EAAOD,KAAKE,MAAMD,OAClBE,EAAYF,EAAOE,UAAUC,cAC7BC,EAAS,uDAAAC,OAA0DH,EAA1D,gBACf,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAMZ,EAAKG,MAAMU,oBAAoBX,KAClEM,EAAAC,EAAAC,cAAA,OAAKI,IAAKR,EAAWK,UAAU,eAAeI,IAAI,QAClDP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGM,KAAK,IAAIL,UAAU,QACtBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBT,EAAOE,YAEtCI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaT,EAAOe,iBAdxBC,IAAMC,6BCANC,mLAGT,IAAApB,EAAAC,KACFoB,EAAOpB,KAAKE,MAAMD,OAAOE,UAI/B,OAHuBH,KAAKE,MAAMmB,cAAcC,SAASF,GACtDb,EAAAC,EAAAC,cAAA,UAASC,UAAY,iCAAiCC,QAAS,kBAAMZ,EAAKG,MAAMqB,oBAAoBxB,EAAKG,MAAMD,UAA/G,wBACAM,EAAAC,EAAAC,cAAA,UAAQC,UAAY,iCAAiCC,QAAS,kBAAMZ,EAAKG,MAAMsB,kBAAkBzB,EAAKG,MAAMD,UAA5G,6BAPmCiB,aC2C3BO,cAvCb,SAAAA,EAAYvB,GAAO,IAAAH,EAAA,OAAA2B,OAAAC,EAAA,EAAAD,CAAA1B,KAAAyB,IACjB1B,EAAA2B,OAAAE,EAAA,EAAAF,CAAA1B,KAAA0B,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA9B,KAAME,KAGR6B,mBAAoB,WAClB,IAAM9B,EAASF,EAAKG,MAAMD,OAC1B,OAAGF,EAAKG,MAAM8B,SACNzB,EAAAC,EAAAC,cAACwB,EAAD,CACLhC,OAASA,EAAQuB,kBAAmBzB,EAAKG,MAAMsB,kBAC/CD,oBAAqBxB,EAAKG,MAAMqB,oBAChCF,cAAetB,EAAKG,MAAMmB,cAC1BW,SAAUjC,EAAKG,MAAM8B,gBAErB,GAbcjC,wEAkBjB,IAAME,EAASD,KAAKE,MAAMD,OAC1B,OACEM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAuB2B,QAASlC,EAAOE,YACvCI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAE,SAAA/B,OAAWL,EAAOqC,UACxB/B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQT,EAAOE,YAE9BH,KAAK+B,qBACJxB,EAAAC,EAAAC,cAAA,UAAKR,EAAOe,OACZT,EAAAC,EAAAC,cAAA,UAAKR,EAAOsC,aAAZ,2CA/BQtB,IAAMC,WCoHfpB,cApHb,SAAAA,EAAYI,GAAO,IAAAH,EAAA,OAAA2B,OAAAC,EAAA,EAAAD,CAAA1B,KAAAF,IACjBC,EAAA2B,OAAAE,EAAA,EAAAF,CAAA1B,KAAA0B,OAAAG,EAAA,EAAAH,CAAA5B,GAAAgC,KAAA9B,KAAME,KA6CRsC,aAAe,SAAAvC,GACbF,EAAK0C,SAAS,CACZC,gBAAiBzC,KAhDFF,EAoDnBa,oBAAsB,SAAAX,GACpBF,EAAKyC,aAAavC,GAClB0C,SAASC,eAAgB,gBAAiBC,SAAS,GAAGhC,IAAtD,oCAAAP,OAAgGL,EAAOE,YAtDtFJ,EA0DnB+C,cAAgB,SAACC,GACf,OAAOxC,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,2BACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXqC,EAAIC,IAAI,SAAA/C,GACR,OACEM,EAAAC,EAAAC,cAACwC,EAAD,CACEhD,OAAQA,EACRiD,IAAKjD,EAAOe,MACZJ,oBAAqBb,EAAKa,wBANlC,OA7Dab,EA2EnBoD,qBAAuB,SAACC,GACtB,IAAML,EAAMrB,OAAO2B,OAAOD,GACpBE,EAAO5B,OAAO4B,KAAKF,GACrBG,EAAU,EACd,OAAOR,EAAIC,IAAI,SAAAQ,GAEb,OADAD,IACOhD,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,UAAK6C,EAAKC,EAAQ,IAClBhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACd8C,EAAOR,IAAI,SAAA/C,GACV,OACEM,EAAAC,EAAAC,cAACwC,EAAD,CACEhD,OAAQA,EACRiD,IAAKjD,EAAOwD,GACZ7C,oBAAqBb,EAAKa,wBANhC,SAjFJb,EAAK2D,MAAQ,CACXC,QAAS,GACTC,gBAAiB,GACjBlB,gBAAiB,CACfe,GAAI,cACJnB,QAAS,YACTnC,UAAW,qBACX0D,QAAS,WATI9D,mFAcC,IAAA+D,EAAA9D,KAClB+D,MAAM,wDACLC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAL,GACJG,EAAKrB,SAAS,CACZkB,QAASA,EAAQQ,OAGnBR,EAAQQ,KAAKnB,IAAI,SAAA/C,GACf,IAAMmE,EAAK,CACTC,KAAM,CACJC,SAAUrE,EAAOE,UACjBmC,QAASrC,EAAOqC,QAChBiC,SAAU,SAGdR,MAAM,iDAAkD,CACtDS,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBP,KAAMQ,KAAKC,UAAUT,KACpBJ,KAAK,SAAAC,GAAI,OAAIA,EAAKC,aAGxBF,KAAK,SAAAL,GACJ,IAAMmB,EAAchB,EAAKJ,MAAMC,QAAQoB,MAAM,EAAG,GAChDjB,EAAKtB,aAAasC,EAAY,uCAyDhC,OACEvE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuE,EAAD,CACE/E,OAAQD,KAAK0D,MAAMhB,gBACnBuC,aAAcjF,KAAKE,MAAM+E,aACzBjD,SAAUhC,KAAKE,MAAM8B,SACrBR,kBAAoBxB,KAAKE,MAAMsB,kBAC/BH,cAAerB,KAAKE,MAAMmB,cAC1BE,oBAAqBvB,KAAKE,MAAMqB,sBAEjCvB,KAAK8C,cAAc9C,KAAK0D,MAAMC,SAC9B3D,KAAKmD,qBAAqBnD,KAAKE,MAAMgF,kBA/GvBjE,IAAMC,WCeZiE,mLAbX,OACE5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAC2E,EAAD,CAAQH,aAAcjF,KAAKE,MAAM+E,aAC/BzD,kBAAmBxB,KAAKE,MAAMsB,kBAC9BH,cAAerB,KAAKE,MAAMmB,cAC1BE,oBAAqBvB,KAAKE,MAAMqB,oBAChC2D,SAAUlF,KAAKE,MAAMgF,SACrBlD,SAAUhC,KAAKE,MAAM8B,mBATZd,qBCmGJmE,cApGb,SAAAA,EAAYnF,GAAO,IAAAH,EAAA,OAAA2B,OAAAC,EAAA,EAAAD,CAAA1B,KAAAqF,IACjBtF,EAAA2B,OAAAE,EAAA,EAAAF,CAAA1B,KAAA0B,OAAAG,EAAA,EAAAH,CAAA2D,GAAAvD,KAAA9B,KAAME,KAORoF,aAAe,SAAAC,GACbxF,EAAK0C,SAALf,OAAA8D,EAAA,EAAA9D,CAAA,GACG6D,EAAEE,OAAOrE,KAAOmE,EAAEE,OAAOC,SAVX3F,EAcnB4F,aAAe,SAAAJ,GACbA,EAAEK,iBACF,IAAMxB,EAAO,CACXC,KAAM,CACJC,SAAUvE,EAAK2D,MAAMY,SACrBC,SAAUxE,EAAK2D,MAAMa,WAGzBR,MAAM,iDAAkD,CACtDS,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRC,eAAgB,oBAElBP,KAAMQ,KAAKC,UAAUT,KAEpBJ,KAAK,SAAA6B,GAAG,OAAIA,EAAI3B,SAChBF,KAAK,SAAAK,GACJtE,EAAKG,MAAM4F,gBAAgBzB,KAE5BL,KAAKjE,EAAKG,MAAM6F,QAAQC,KAAK,OAhChCjG,EAAK2D,MAAQ,CACXY,SAAU,GACVC,SAAU,IAJKxE,wEAsCjB,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,QAAMwF,SAAUjG,KAAK2F,aAAcO,OAAO,KACxC3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACb,IACDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAgB,MAGjCH,EAAAC,EAAAC,cAAA,SACEW,KAAK,WACLV,UAAU,eACVyF,YAAY,wBACZC,KAAK,OACLC,SAAUrG,KAAKsF,gBAGnB/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACb,IACDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAgB,MAGjCH,EAAAC,EAAAC,cAAA,SACEW,KAAK,WACLV,UAAU,eACVyF,YAAY,kBACZC,KAAK,WACLC,SAAUrG,KAAKsF,gBAWnB/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQ2F,KAAK,SAAS1F,UAAU,6BAC7B,IADH,iBAEiB,MAGnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACEE,QAASX,KAAKE,MAAMoG,eACpB5F,UAAU,6BAET,IAJH,OAKO,eA5FEO,IAAMC,WCqKZqF,cAlKb,SAAAA,EAAYrG,GAAO,IAAAH,EAAA,OAAA2B,OAAAC,EAAA,EAAAD,CAAA1B,KAAAuG,IACjBxG,EAAA2B,OAAAE,EAAA,EAAAF,CAAA1B,KAAA0B,OAAAG,EAAA,EAAAH,CAAA6E,GAAAzE,KAAA9B,KAAME,KAORoF,aAAe,SAAAC,GACbxF,EAAK0C,SAALf,OAAA8D,EAAA,EAAA9D,CAAA,GACG6D,EAAEE,OAAOrE,KAAOmE,EAAEE,OAAOC,SAVX3F,EAcnB4F,aAAe,SAAAJ,GACbA,EAAEK,iBACF,IAAMxB,EAAO,CACXE,SAAUvE,EAAK2D,MAAMY,SACrBC,SAAUxE,EAAK2D,MAAMa,UAGvBR,MAAM,oDAAqD,CACzDS,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRC,eAAgB,oBAElBP,KAAMQ,KAAKC,UAAUT,KAEpBJ,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAK,GACJtE,EAAKG,MAAM4F,gBAAgBzB,KAE5BmC,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,SAAUA,MA/B1C1G,EAAK2D,MAAQ,CACXY,SAAU,GACVC,SAAU,IAJKxE,wEAqCjB,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iEACbH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAI,IAAK3B,UAAU,gBAAzB,cAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2B+C,GAAG,0BAC3ClD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACZH,EAAAC,EAAAC,cAAA,KACEC,UAAU,2BACVK,KAAK,IACL0C,GAAG,iBACHkD,KAAK,SACLC,cAAY,WACZC,gBAAc,OACdC,gBAAc,SAPhB,eAUAvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBqG,kBAAgB,kBAC7CxG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBK,KAAK,KAAlC,SAGAR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBK,KAAK,KAAlC,cAGAR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBK,KAAK,KAAlC,QAGAR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBK,KAAK,KAAlC,WAKJR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACZH,EAAAC,EAAAC,cAAA,KACEC,UAAU,2BACVK,KAAK,IACL0C,GAAG,iBACHkD,KAAK,SACLC,cAAY,WACZC,gBAAc,OACdC,gBAAc,SAPhB,UASD9G,KAAKE,MAAM8B,SACVzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBqG,kBAAgB,kBAC7CxG,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAE,UAAA/B,OAAYN,KAAKE,MAAM+E,aAAaxB,GAApC,SAA+C/C,UAAU,iBAAjE,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,QAASX,KAAKE,MAAM8G,SAAnD,YAGUzG,EAAAC,EAAAC,cAAA,mBAMhBT,KAAKE,MAAM8B,SAsDXzB,EAAAC,EAAAC,cAAA,QAAMwF,SAAUjG,KAAKE,MAAM8G,SACzBzG,EAAAC,EAAAC,cAAA,UAAQ2F,KAAK,SAAS1F,UAAU,8BAAhC,aAtDFH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACdH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcuF,SAAUjG,KAAK2F,cAC3CpF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UACfuG,QAAQ,iCADV,aAIA1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAGjBH,EAAAC,EAAAC,cAAA,SACE2F,KAAK,OACLhF,KAAK,WACLV,UAAU,eACV+C,GAAG,iBACH0C,YAAY,WACZE,SAAUrG,KAAKsF,gBAGnB/E,EAAAC,EAAAC,cAAA,SACEC,UAAU,UACVuG,QAAQ,iCAFV,aAKA1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAGjBH,EAAAC,EAAAC,cAAA,SACE2F,KAAK,WACLhF,KAAK,WACLV,UAAU,eACV+C,GAAG,iBACH0C,YAAY,WACZE,SAAUrG,KAAKsF,gBAGnB/E,EAAAC,EAAAC,cAAA,UAAQ2F,KAAK,SAAS1F,UAAU,4BAAhC,UAKFH,EAAAC,EAAAC,cAAA,QAAMyF,OAAO,WACX3F,EAAAC,EAAAC,cAAA,UAAQ2F,KAAK,SAAS1F,UAAU,8BAAhC,oBAjJOQ,aCoCNgG,6MAlCbnF,mBAAoB,WAClB,IAAM9B,EAASF,EAAKG,MAAMD,OAC1B,OAAGF,EAAKG,MAAM8B,UACZ0E,QAAQS,IAAI,aACN5G,EAAAC,EAAAC,cAACwB,EAAD,CACLhC,OAASA,EAAQuB,kBAAmBzB,EAAKG,MAAMsB,kBAC/CD,oBAAqBxB,EAAKG,MAAMqB,oBAChCF,cAAetB,EAAKG,MAAMmB,sBAE1BqF,QAAQS,IAAI,uFAKf,IAAMlH,EAASD,KAAKE,MAAMD,OAE1B,OACEM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAuB4G,MAAOnH,EAAOwD,KACrClD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQT,EAAOE,WAC1BH,KAAK+B,qBACNxB,EAAAC,EAAAC,cAAA,UAAKR,EAAOe,OACZT,EAAAC,EAAAC,cAAA,UAAKR,EAAOsC,aAAZ,2CA3BetB,IAAMC,WC2CpBmG,6MAzCbvE,cAAgB,WACd,OAAO/C,EAAKG,MAAMoH,OAAOtE,IAAI,SAAAoE,GAC3B,OACE7G,EAAAC,EAAAC,cAACwC,EAAD,CACEhD,OAAQmH,EACRlE,IAAKkE,EAAM3D,GACX7C,oBAAqB,kBAAMb,EAAKG,MAAMU,oBAAoBwG,iFAOhE,IAAMG,EACgC,YAApCvH,KAAKE,MAAMwC,gBAAgB0D,KACzB7F,EAAAC,EAAAC,cAACuE,EAAD,CACE/E,OAAQD,KAAKE,MAAMwC,gBACnBuC,aAAcjF,KAAKE,MAAM+E,aACzB5D,cAAerB,KAAKE,MAAMmB,cAC1BG,kBAAmBxB,KAAKE,MAAMsB,kBAC9BQ,SAAUhC,KAAKE,MAAM8B,WAGvBzB,EAAAC,EAAAC,cAAC+G,EAAD,CACEvH,OAAQD,KAAKE,MAAMwC,gBACnBuC,aAAcjF,KAAKE,MAAM+E,aACzB5D,cAAerB,KAAKE,MAAMmB,cAC1BG,kBAAmBxB,KAAKE,MAAMsB,kBAC9BQ,SAAUhC,KAAKE,MAAM8B,WAG3B,OACEzB,EAAAC,EAAAC,cAAA,WACG8G,EACDhH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBV,KAAK8C,yBApC3B7B,IAAMC,WC2DjBuG,6MA5Db/D,MAAQ,CACND,GAAI,GACJ6D,OAAQ,GACR5E,gBAAiB,CACfe,GAAI,YACJnB,QAAS,WACTnC,UAAW,aACXa,MAAO,iBAYX0G,mBAAqB,WACnB3D,MAAK,kDAAAzD,OAAmDP,EAAK2D,MAAMD,GAA9D,YACJO,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAsD,GACJvH,EAAK0C,SAAS,CACZ6E,OAAQA,EAAOnD,KACfzB,gBAAiB4E,EAAOnD,KAAK,UAKnC3B,aAAe,SAAA4E,GACbrH,EAAK0C,SAAS,CAAEC,gBAAiB0E,OAGnCxG,oBAAsB,SAAAwG,GACpBrH,EAAKyC,aAAa4E,GACC,YAAfA,EAAMhB,KACRzD,SAASC,eAAe,gBAAgBC,SAAS,GAAGhC,IAApD,kCAAAP,OAA4F8G,EAAM3D,IAElGd,SAASC,eAAe,gBAAgBC,SAAS,GAAGhC,IAApD,oCAAAP,OAA8F8G,EAAM9E,6FA3BtG,IAAMqF,EAAS3H,KAAKE,MAAM0H,MAAMC,OAChC7H,KAAKyC,SACH,CAAEgB,GAAIkE,EAAOlE,IACbzD,KAAK0H,qDA6BP,OACEnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACqH,EAAD,CACE7C,aAAcjF,KAAKE,MAAM+E,aACzBjD,SAAUhC,KAAKE,MAAM8B,SACrBsF,OAAQtH,KAAK0D,MAAM4D,OACnB5E,gBAAiB1C,KAAK0D,MAAMhB,gBAC5B9B,oBAAqBZ,KAAKY,oBAC1BS,cAAerB,KAAKE,MAAMmB,cAC1BG,kBAAmBxB,KAAKE,MAAMsB,4BAtDjBP,IAAMC,WCCR6G,6MACnBrE,MAAM,KAQNsE,qBAAsB,SAACzC,GACnBxF,EAAK0C,SAAS,CAAC6B,SAAUiB,EAAEE,OAAOC,WAGtCuC,WAAa,WACX,IAAMxE,EAAK1D,EAAKG,MAAM+E,aAAaxB,GACnCM,MAAK,kDAAAzD,OAAmDmD,GAAM,CAC5De,OAAQ,WACPR,KAAK,SAAAC,GACNiE,MAAM,gBACNnI,EAAKG,MAAM8G,eAIfmB,iBAAkB,WAChB,OAAIpI,EAAKG,MAAM0H,MAAMC,OAAOpE,IAAM1D,EAAKG,MAAM+E,aAAaxB,GACjDyE,MAAM,kFAEJ3H,EAAAC,EAAAC,cAAA,OAAKgD,GAAG,aACblD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAauF,SAAU,SAACV,GAAD,OAAOxF,EAAKG,MAAMkI,qBAAqB7C,EAAGxF,EAAK2D,MAAMY,YAC5F/D,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAjB,2CACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAW,WAAW0F,KAAK,OAAOhF,KAAK,WAAWsE,MAAO3F,EAAK2D,MAAMY,SAAU6B,YAAY,WACjGE,SAAUtG,EAAKiI,uBACfzH,EAAAC,EAAAC,cAAA,SAAOC,UAAW,mCAAmC0F,KAAK,SAASV,MAAM,oBAEzEnF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAI,KACR9B,EAAAC,EAAAC,cAAA,UAAQC,UAAW,oCAAnB,wBAGFH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAI,KACR9B,EAAAC,EAAAC,cAAA,UAAQE,QAASZ,EAAKkI,WAAYvH,UAAW,mCAA7C,8GAlCRV,KAAKyC,SAAS,CACZ6B,SAAUtE,KAAKE,MAAM+E,aAAaX,4CAwCpC,OAAQ/D,EAAAC,EAAAC,cAAA,WACHT,KAAKmI,2BA/CwBjH,aCiNvBmH,cA1Mb,SAAAA,EAAYnI,GAAO,IAAAH,EAAA,OAAA2B,OAAAC,EAAA,EAAAD,CAAA1B,KAAAqI,IACjBtI,EAAA2B,OAAAE,EAAA,EAAAF,CAAA1B,KAAA0B,OAAAG,EAAA,EAAAH,CAAA2G,GAAAvG,KAAA9B,KAAME,KASRoI,eAAiB,WACgB,OAA5BvI,EAAK2D,MAAMuB,aACZlB,MAAK,kDAAAzD,OAAmDP,EAAK2D,MAAMuB,aAAaxB,GAA3E,eACJO,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAA3C,GACJ,IAAMkH,EAAWlH,EAAc2B,IAAI,SAAAwF,GACjC,OAAOA,EAASC,oBAElB1I,EAAK0C,SAAS,CACZpB,cAAekH,EACfvG,UAAU,GACTjC,EAAK2I,uBAGVR,MAAM,wBAxBSnI,EA4BnB2I,oBAAqB,WACnB,IAAMpB,EAAO,GACT/D,EAAU,EACdxD,EAAK2D,MAAMrC,cAAc2B,IAAI,SAAAqB,GAC3BtE,EAAK4I,qBAAqBtE,GAAML,KAAK,SAAAC,GACnCqD,EAAOjD,GAAQJ,IACfV,IACexD,EAAK2D,MAAMrC,cAAcuH,QACtC7I,EAAK0C,SAAS,CACZyC,SAAUoC,SArCDvH,EA4CnB4I,qBAAsB,SAACrE,GACrB,IAAIhC,EAEJ,OAAOyB,MAAM,kDACZC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAA6E,GACF,IAAMC,EAAaD,EAAME,KAAK,SAAA1E,GAC5B,OAAOA,EAAKC,WAAaA,IAEzBhC,EAAUwG,EAAUxG,QACfwG,EAAUrF,KAEpBO,KAAK,SAAA6E,GACJ,IAAMzE,EAAK,CAAC4E,UAAW1G,GACvB,OAAOyB,MAAK,2DAA4D,CACtES,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBP,KAAMQ,KAAKC,UAAUT,KAEtBJ,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAE,GACH,OAAOA,EAAKC,UApEApE,EAyEnB+F,gBAAkB,SAACzB,GACjBtE,EAAK0C,SAAS,CACZwC,aAAcZ,GACbtE,EAAKuI,iBA5ESvI,EA+EnBiH,QAAU,SAACzB,GACNA,GACDA,EAAEK,iBAEJc,QAAQS,IAAI,eACZpH,EAAK0C,SAAS,CACZT,UAAU,EACVkD,SAAU,MAtFKnF,EA2FnBqI,qBAAuB,SAAC7C,EAAG0D,GACzB1D,EAAEK,iBACF,IAAMxB,EAAO,CACXE,SAAU2E,GAEZlF,MAAK,kDAAAzD,OAAmDP,EAAK2D,MAAMuB,aAAaxB,IAAM,CACpFe,OAAQ,QACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBP,KAAMQ,KAAKC,UAAUT,KACpBJ,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SACpBF,KAAK,SAAAkF,GACJnJ,EAAK0C,SAAS,CAACwC,aAAciE,KAC5BhB,MAAM,iCA1GQnI,EA6GnByB,kBAAmB,SAACvB,GAClB,IAAMmE,EAAK,CAAC+E,cAAelJ,EAAOE,WAClC4D,MAAK,kDAAAzD,OAAmDP,EAAK2D,MAAMuB,aAAaxB,GAA3E,cAA2F,CAC9Fe,OAAQ,OACNC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBP,KAAMQ,KAAKC,UAAUT,KAEvBrE,EAAK0C,SAAS,CACZpB,cAAa,GAAAf,OAAAoB,OAAA0H,EAAA,EAAA1H,CAAM3B,EAAK2D,MAAMrC,eAAjB,CAAgCpB,EAAOE,eAxHvCJ,EA4HnBwB,oBAAqB,SAACtB,GACpB8D,MAAK,kDAAAzD,OAAmDP,EAAK2D,MAAMuB,aAAaxB,GAA3E,eACJO,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAqF,GACJ,IAAMb,EAAWa,EAAUN,KAAK,SAAAO,GAAI,OAAKA,EAAKb,oBAAsBxI,EAAOE,YAC3E4D,MAAK,kDAAAzD,OAAmDP,EAAK2D,MAAMuB,aAAaxB,GAA3E,eAAAnD,OAA2FkI,EAAS/E,IACvG,CAAEe,OAAQ,aAEdzE,EAAK0C,SAAS,CACZpB,cAAetB,EAAK2D,MAAMrC,cAAckI,OAAO,SAAAnI,GAAI,OACjDA,IAASnB,EAAOE,eApIpBJ,EAAK2D,MAAQ,CACXuB,aAAc,GACdjD,UAAU,EACVX,cAAe,GACf6D,SAAU,IANKnF,wEA2IV,IAAA+D,EAAA9D,KACP,OACEO,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACE7B,EAAAC,EAAAC,cAACF,EAAAC,EAAMgJ,SAAP,KACEjJ,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CACEC,KAAK,IACLC,OAAQ,SAAAzJ,GAAK,OACXK,EAAAC,EAAAC,cAACmJ,EAADlI,OAAAmI,OAAA,GAAY3J,EAAZ,CACE+E,aAAcnB,EAAKJ,MAAMuB,aACzBa,gBAAiBhC,EAAKgC,gBACtB9D,SAAU8B,EAAKJ,MAAM1B,SACrBgF,QAASlD,EAAKkD,cAIpBzG,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAOK,OAAK,EAACJ,KAAM,IACjBC,OAAQ,SAACzJ,GAAD,OAAWK,EAAAC,EAAAC,cAACsJ,EAADrI,OAAAmI,OAAA,GAAU3J,EAAV,CACjB+E,aAAcnB,EAAKJ,MAAMuB,aACzBzD,kBAAmBsC,EAAKtC,kBACxBD,oBAAqBuC,EAAKvC,oBAC1BF,cAAeyC,EAAKJ,MAAMrC,cAC1B6D,SAAUpB,EAAKJ,MAAMwB,SACrBlD,SAAU8B,EAAKJ,MAAM1B,eAIzBzB,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAOK,OAAK,EAACJ,KAAM,UACjBC,OAAQ,SAACzJ,GAAD,OAAWK,EAAAC,EAAAC,cAACuJ,EAADtI,OAAAmI,OAAA,GAAY3J,EAAZ,CACjB+E,aAAcnB,EAAKJ,MAAMuB,aACzBa,gBAAiBhC,EAAKgC,sBAI1BvF,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CACEK,OAAK,EAACJ,KAAK,aACXC,OAAQ,SAACzJ,GAAD,OACNK,EAAAC,EAAAC,cAACwJ,EAADvI,OAAAmI,OAAA,GAAc3J,EAAd,CACE+E,aAAcnB,EAAKJ,MAAMuB,aACzBjD,SAAU8B,EAAKJ,MAAM1B,SACrBR,kBAAmBsC,EAAKtC,kBACxBD,oBAAqBuC,EAAKvC,oBAC1BF,cAAeyC,EAAKJ,MAAMrC,oBAIhCd,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CACEK,OAAK,EAACJ,KAAK,kBACXC,OAAQ,SAACzJ,GAAD,OACNK,EAAAC,EAAAC,cAACyJ,EAADxI,OAAAmI,OAAA,GAAc3J,EAAd,CACE+E,aAAcnB,EAAKJ,MAAMuB,aACzB+C,qBAAuBlE,EAAKkE,qBAC5BI,qBAAsBtE,EAAKsE,qBAC3BpB,QAASlD,EAAKkD,uBAhMZ9F,aCEEiJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1C,MACvB,2DCVN2C,IAASZ,OAAOpJ,EAAAC,EAAAC,cAAC+J,EAAD,MAAO7H,SAASC,eAAe,SDyHzC,kBAAmB6H,WACrBA,UAAUC,cAAcC,MAAM3G,KAAK,SAAA4G,GACjCA,EAAaC","file":"static/js/main.13c52fa5.chunk.js","sourcesContent":["import React from 'react'\n\nclass Stream extends React.Component {\n\n  render () {\n    const stream=this.props.stream\n    const user_name = stream.user_name.toLowerCase();\n    const image_url = `https://static-cdn.jtvnw.net/previews-ttv/live_user_${user_name}-220x150.jpg`\n    return(\n      <div>\n        <div className=\"card\" onClick={() => this.props.handleClickOnStream(stream)} >\n          <img src={image_url} className=\"card-img-top\" alt=\"...\" />\n          <div className=\"card-body\">\n            <a href='#' className=\"link\">\n            <p className=\"card-text link\">{stream.user_name}</p>\n            </a>\n            <p className=\"card-text\">{stream.title}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stream;\n","import React, {Component} from 'react'\n\nexport default class FollowButton extends Component {\n\n\n  render () {\n    const name = this.props.stream.user_name\n    const buttonToRender = this.props.followedUsers.includes(name) ?\n       <button  className = \"btn btn-outline-warning button\" onClick={() => this.props.handleUnFollowClick(this.props.stream) }> Unfollow this user </button>\n    :  <button className = \"btn btn-outline-warning button\" onClick={() => this.props.handleFollowClick(this.props.stream) }> Follow this user </button>\n    return(\n        buttonToRender\n    )\n\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\";\nimport FollowButton from './FollowButton'\n\nclass Jumbotron extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderFollowButton =() =>{\n    const stream = this.props.stream;\n    if(this.props.loggedIn){\n     return <FollowButton\n       stream ={stream} handleFollowClick={this.props.handleFollowClick}\n       handleUnFollowClick={this.props.handleUnFollowClick}\n       followedUsers={this.props.followedUsers}\n       loggedIn={this.props.loggedIn}/>\n     } else {\n       return\n     }\n  }\n\n  render() {\n    const stream = this.props.stream;\n    return (\n      <div>\n        <div className=\"jumbotron jumbotron-fluid\">\n          <div className=\"container\">\n            <ReactTwitchEmbedVideo channel={stream.user_name} />\n            <div>\n              <Link to={`users/${stream.user_id}`}>\n                <h1 className=\"link\">{stream.user_name}</h1>\n              </Link>\n              {this.renderFollowButton()}\n                <h5>{stream.title}</h5>\n                <h6>{stream.viewer_count} Viewers Currently Watching </h6>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport StreamCard from \"./StreamCard\";\nimport Jumbotron from \"./Jumbotron\";\n\nclass Stream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: [],\n      favoritesVideos: [],\n      jumbotronStream: {\n        id: \"33691327920\",\n        user_id: \"107939114\",\n        user_name: \"DutchsinseOfficial\",\n        game_id: \"509670\"\n      }\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://code-stream.herokuapp.com/api/v1/livestreams\")\n    .then(resp => resp.json())\n    .then(streams => {\n      this.setState({\n        streams: streams.data\n      });\n      // seed db with users\n      streams.data.map(stream =>{\n        const body={\n          user: {\n            username: stream.user_name,\n            user_id: stream.user_id,\n            password: 'temp'\n          }\n        }\n        fetch('https://code-stream.herokuapp.com/api/v1/users', {\n          method: \"POST\",\n          headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }).then(resp => resp.json())\n      })\n    })\n    .then(streams => {\n      const streamArray = this.state.streams.slice(0, 1);\n      this.setJumbotron(streamArray[0]);\n    });\n  }\n\n  setJumbotron = stream => {\n    this.setState({\n      jumbotronStream: stream\n    });\n  };\n\n  handleClickOnStream = stream => {\n    this.setJumbotron(stream);\n    document.getElementById( \"twitch-embed\" ).children[0].src = `https://embed.twitch.tv/?channel=${stream.user_name}`;\n  };\n\n\n  renderStreams = (arr) => {\n    return <div>\n      <h6>Live Streams </h6>\n        <div className=\"stream_card_container\">\n           {arr.map(stream => {\n            return (\n              <StreamCard\n                stream={stream}\n                key={stream.title}\n                handleClickOnStream={this.handleClickOnStream}\n              />\n            );\n          })};\n        </div>\n    </div>\n  };\n\n  renderIndividualFave = (obj) => {\n    const arr = Object.values(obj)\n    const keys = Object.keys(obj)\n    let counter = 0\n    return arr.map(vidarr => {\n      counter ++;\n      return <div>\n        <h6>{keys[counter-1]}</h6>\n        <div className=\"stream_card_container\">\n        {vidarr.map(stream => {\n          return (\n            <StreamCard\n              stream={stream}\n              key={stream.id}\n              handleClickOnStream={this.handleClickOnStream}\n            />\n          );\n        })};\n        </div>\n      </div>\n    })\n  }\n\n  render() {\n    return (\n      <div>\n      <Jumbotron\n        stream={this.state.jumbotronStream}\n        loggedInUser={this.props.loggedInUser}\n        loggedIn={this.props.loggedIn}\n        handleFollowClick ={this.props.handleFollowClick}\n        followedUsers={this.props.followedUsers}\n        handleUnFollowClick={this.props.handleUnFollowClick}\n      />\n      {this.renderStreams(this.state.streams)}\n      {this.renderIndividualFave(this.props.faveVids)}\n      </div>\n    );\n  }\n}\n\nexport default Stream;\n","import React, { Component } from \"react\";\nimport \"../Home.css\";\nimport Stream from \"./Stream\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <Stream loggedInUser={this.props.loggedInUser}\n          handleFollowClick={this.props.handleFollowClick}\n          followedUsers={this.props.followedUsers}\n          handleUnFollowClick={this.props.handleUnFollowClick}\n          faveVids={this.props.faveVids}\n          loggedIn={this.props.loggedIn}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const body = {\n      user: {\n        username: this.state.username,\n        password: this.state.password\n      }\n    };\n    fetch(\"https://code-stream.herokuapp.com/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(user => {\n        this.props.setLoggedInUser(user);\n      })\n      .then(this.props.history.push(\"/\"));\n  };\n\n  render() {\n    return (\n      <div className=\"login_form_container\">\n        <form onSubmit={this.handleSubmit} action=\"/\">\n          <div className=\"form-group input-group\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">\n                {\" \"}\n                <i className=\"fa fa-user\" />{\" \"}\n              </span>\n            </div>\n            <input\n              name=\"username\"\n              className=\"form-control\"\n              placeholder=\"Enter Twitch Username\"\n              type=\"text\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"form-group input-group\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">\n                {\" \"}\n                <i className=\"fa fa-lock\" />{\" \"}\n              </span>\n            </div>\n            <input\n              name=\"password\"\n              className=\"form-control\"\n              placeholder=\"Create password\"\n              type=\"password\"\n              onChange={this.handleChange}\n            />\n          </div>\n\n          {/*  <div className=\"form-group input-group\">\n              \t<div className=\"input-group-prepend\">\n          \t\t    <span className=\"input-group-text\"> <i className=\"fa fa-lock\"></i> </span>\n          \t\t  </div>\n                 <input name=\"password\" className=\"form-control\"\n                    placeholder=\"Repeat password\" type=\"password\"/>\n              </div>*/}\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">\n              {\" \"}\n              Create Account{\" \"}\n            </button>\n          </div>\n          <div className=\"form-group\">\n            <button\n              onClick={this.props.dismountSignUp}\n              className=\"btn btn-primary btn-block\"\n            >\n              {\" \"}\n              Back{\" \"}\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const body = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    fetch(\"https://code-stream.herokuapp.com/sessions/create\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(resp => resp.json())\n      .then(user => {\n        this.props.setLoggedInUser(user);\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n\n  render() {\n    return (\n      <nav className=\"navbar sticky-top navbar-expand-lg navbar-light primary-color\">\n        <Link to={'/'} className=\"navbar-brand\">\n          CodeStream\n        </Link>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item dropdown\">\n              <a\n                className=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDropdown\"\n                role=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              > Categories\n              </a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <a className=\"dropdown-item\" href=\"#\">\n                  React\n                </a>\n                <div className=\"dropdown-divider\" />\n                <a className=\"dropdown-item\" href=\"#\">\n                  JavaScript\n                </a>\n                <div className=\"dropdown-divider\" />\n                <a className=\"dropdown-item\" href=\"#\">\n                  Ruby\n                </a>\n                <div className=\"dropdown-divider\" />\n                <a className=\"dropdown-item\" href=\"#\">\n                  Rails\n                </a>\n              </div>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a\n                className=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDropdown\"\n                role=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              > User </a>\n            {this.props.loggedIn ?(\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <Link to={`/users/${this.props.loggedInUser.id}/edit`} className=\"dropdown-item\"> My Account </Link>\n                <div className=\"dropdown-divider\" />\n                <div className=\"dropdown-item\" onClick={this.props.signOut} >\n                  Log Out\n                </div>\n              </div>) : ( <div> </div>)\n            }\n            </li>\n          </ul>\n        </div>\n\n        {!this.props.loggedIn ? (\n          <span className=\"form-inline\">\n            <form className=\"form-inline\" onSubmit={this.handleSubmit}>\n              <label className=\"sr-only\"\n                htmlFor=\"inlineFormInputGroupUsername2\"\n              > Username\n              </label>\n              <div className=\"input-group mb-2 mr-sm-2\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">\n                    <i className=\"far fa-user\" />\n                  </div>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  className=\"form-control\"\n                  id=\"username_login\"\n                  placeholder=\"Username\"\n                  onChange={this.handleChange}\n                />\n              </div>\n              <label\n                className=\"sr-only\"\n                htmlFor=\"inlineFormInputGroupUsername2\"\n              > Username\n              </label>\n              <div className=\"input-group mb-2 mr-sm-2\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">\n                    <i className=\"fas fa-key\" />\n                  </div>\n                </div>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"form-control\"\n                  id=\"password_login\"\n                  placeholder=\"Password\"\n                  onChange={this.handleChange}\n                />\n              </div>\n              <button type=\"submit\" className=\"btn secondary-color mb-2\">\n                Login\n              </button>\n            </form>\n\n            <form action=\"/signup\">\n              <button type=\"submit\" className=\"btn secondary-color-d mb-2\">\n                Signup\n              </button>\n            </form>\n          </span>\n        ) : (\n          <form onSubmit={this.props.signOut}>\n            <button type=\"submit\" className=\"btn secondary-color-d mb-2\">\n              Sign Out\n            </button>\n          </form>\n        )\n      }\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\";\nimport FollowButton from './FollowButton'\n\nclass VideoJumbotron extends React.Component {\n\n  renderFollowButton =() =>{\n    const stream = this.props.stream;\n    if(this.props.loggedIn){\n      console.log('logged in')\n     return <FollowButton\n       stream ={stream} handleFollowClick={this.props.handleFollowClick}\n       handleUnFollowClick={this.props.handleUnFollowClick}\n       followedUsers={this.props.followedUsers}/>\n     } else {\n       console.log('logged out')\n       return\n     }\n  }\n  render() {\n    const stream = this.props.stream;\n\n    return (\n      <div>\n        <div className=\"jumbotron jumbotron-fluid\">\n          <div className=\"container\">\n            <ReactTwitchEmbedVideo video={stream.id} />\n            <div>\n            <h1 className=\"link\">{stream.user_name}</h1>\n              {this.renderFollowButton()}\n              <h5>{stream.title}</h5>\n              <h6>{stream.viewer_count} Viewers Currently Watching </h6>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VideoJumbotron;\n","import React from \"react\";\nimport StreamCard from \"./StreamCard\";\nimport Jumbotron from \"./Jumbotron\";\nimport VideoJumbotron from \"./VideoJumbotron\";\n\nclass VideoStream extends React.Component {\n  renderStreams = () => {\n    return this.props.videos.map(video => {\n      return (\n        <StreamCard\n          stream={video}\n          key={video.id}\n          handleClickOnStream={() => this.props.handleClickOnStream(video)}\n        />\n      );\n    });\n  };\n\n  render() {\n    const jumbotronToDisplay =\n      this.props.jumbotronStream.type === \"archive\" ? (\n        <Jumbotron\n          stream={this.props.jumbotronStream}\n          loggedInUser={this.props.loggedInUser}\n          followedUsers={this.props.followedUsers}\n          handleFollowClick={this.props.handleFollowClick}\n          loggedIn={this.props.loggedIn}\n        />\n      ) : (\n        <VideoJumbotron\n          stream={this.props.jumbotronStream}\n          loggedInUser={this.props.loggedInUser}\n          followedUsers={this.props.followedUsers}\n          handleFollowClick={this.props.handleFollowClick}\n          loggedIn={this.props.loggedIn}\n        />\n      );\n    return (\n      <div>\n        {jumbotronToDisplay}\n        <h6>Archived Videos </h6>\n        <div className=\"stream_card_container\">{this.renderStreams()}</div>\n      </div>\n    );\n  }\n}\n\nexport default VideoStream;\n","import React from \"react\";\nimport VideoStreams from \"./VideoStreams\";\n\nclass UserShow extends React.Component {\n  state = {\n    id: \"\",\n    videos: [],\n    jumbotronStream: {\n      id: \"411937859\",\n      user_id: \"32540179\",\n      user_name: \"...loading\",\n      title: \"...loading\"\n    }\n  };\n\n  componentDidMount() {\n    const handle = this.props.match.params;\n    this.setState(\n      { id: handle.id },\n      this.fetchThisUsersData\n    );\n  }\n\n  fetchThisUsersData = () => {\n    fetch(`https://code-stream.herokuapp.com/api/v1/users/${this.state.id}/videos`)\n    .then(resp => resp.json())\n    .then(videos => {\n      this.setState({\n        videos: videos.data,\n        jumbotronStream: videos.data[0]\n      });\n    });\n  };\n\n  setJumbotron = video => {\n    this.setState({ jumbotronStream: video });\n  };\n\n  handleClickOnStream = video => {\n    this.setJumbotron(video);\n    if (video.type === \"archive\") {\n      document.getElementById(\"twitch-embed\").children[0].src = `https://embed.twitch.tv/?video=${video.id}`;\n    } else {\n      document.getElementById(\"twitch-embed\").children[0].src = `https://embed.twitch.tv/?channel=${video.user_id}`;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <VideoStreams\n          loggedInUser={this.props.loggedInUser}\n          loggedIn={this.props.loggedIn}\n          videos={this.state.videos}\n          jumbotronStream={this.state.jumbotronStream}\n          handleClickOnStream={this.handleClickOnStream}\n          followedUsers={this.props.followedUsers}\n          handleFollowClick={this.props.handleFollowClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default UserShow;\n","import React, {Component} from 'react'\nimport { Link } from \"react-router-dom\";\n\n\nexport default class UserEdit extends Component {\n  state={\n  }\n\n  componentDidMount(){\n    this.setState({\n      username: this.props.loggedInUser.username\n    })\n  }\n  handleUsernameChange =(e) => {\n      this.setState({username: e.target.value})\n  }\n\n  deleteUser = () => {\n    const id = this.props.loggedInUser.id\n    fetch(`https://code-stream.herokuapp.com/api/v1/users/${id}`, {\n      method: \"Delete\"\n    }).then(resp => {\n      alert(\"User deleted\")\n      this.props.signOut()\n    })\n  }\n\n  editFormToRender =() => {\n    if (this.props.match.params.id != this.props.loggedInUser.id){\n      return alert(\"What are you playing at, you may only update your own account, get out of here\")\n    } else {\n        return <div id=\"edit_form\">\n          <form className=\"form-group\" onSubmit={(e) => this.props.submitChangeUsername(e, this.state.username)}>\n          <label className=\"white_label\"> Please enter matching Twitch Username </label>\n          <input className =\"edit_btn\" type=\"text\" name=\"username\" value={this.state.username} placeholder=\"Username\"\n          onChange={this.handleUsernameChange}/>\n          <input className =\"btn btn-outline-warning edit_btn\" type=\"submit\" value=\"Update Account\" />\n          </form>\n          <Link to={'/'} >\n            <button className =\"btn btn-outline-primary edit_btn\">\n            Back to CodeStream </button>\n          </Link>\n          <Link to={'/'} >\n            <button onClick={this.deleteUser} className =\"btn btn-outline-danger edit_btn\">\n            Delete User Account </button>\n            </Link>\n        </div>\n    }\n  }\n  render () {\n    return (<div>\n        {this.editFormToRender()}\n        </div>\n    )\n\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport SignUp from \"./components/SignUp\";\nimport NavBar from \"./components/NavBar\";\nimport UserShow from \"./components/UserShow.js\";\nimport UserEdit from \"./components/UserEdit.js\";\nimport \"./Home.css\";\nimport \"./index.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: {},\n      loggedIn: false,\n      followedUsers: [],\n      faveVids: []\n    }\n  }\n\n  fetchFavorites = ()=> {\n    if(this.state.loggedInUser !== null){\n      fetch(`https://code-stream.herokuapp.com/api/v1/users/${this.state.loggedInUser.id}/favorites`)\n      .then(resp => resp.json())\n      .then(followedUsers => {\n        const usernames= followedUsers.map(favorite => {\n          return favorite.followed_username\n        })\n        this.setState({\n          followedUsers: usernames,\n          loggedIn: true\n        }, this.fetchFavoriteVideos)\n      })\n    } else {\n      alert(\"Invalid Credentials\")\n    }\n  }\n\n  fetchFavoriteVideos =() =>{\n    const videos={}\n    let counter = 0\n    this.state.followedUsers.map(user => {\n      this.findVideosByUsername(user).then(resp =>{\n        videos[user] = resp\n        counter ++;\n        if(counter === this.state.followedUsers.length){\n          this.setState({\n            faveVids: videos\n          })\n        }\n      })\n    })\n  }\n\n  findVideosByUsername =(username) =>{\n    let user_id;\n    let id;\n    return fetch('https://code-stream.herokuapp.com/api/v1/users')\n    .then(resp => resp.json())\n    .then(users => {\n        const foundUser =  users.find(user => {\n          return user.username === username\n        })\n          user_id = foundUser.user_id\n          id = foundUser.id\n      })\n    .then(users =>{\n      const body={twitch_id: user_id}\n      return fetch(`https://code-stream.herokuapp.com/sessions/getUserVideos`,{\n        method: \"POST\",\n        headers: {\n          'Accept': \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      })\n      .then(resp => resp.json())\n      .then(json => {\n         return json.data\n      })\n    })\n  }\n\n  setLoggedInUser = (user) =>{\n    this.setState({\n      loggedInUser: user\n    }, this.fetchFavorites)\n  }\n\n  signOut = (e) => {\n    if(e){\n      e.preventDefault();\n    }\n    console.log('signing out')\n    this.setState({\n      loggedIn: false,\n      faveVids: []\n    });\n  };\n\n\n  submitChangeUsername = (e, newUsername) => {\n    e.preventDefault();\n    const body = {\n      username: newUsername\n    }\n    fetch(`https://code-stream.herokuapp.com/api/v1/users/${this.state.loggedInUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json())\n    .then(updatedUser => {\n      this.setState({loggedInUser: updatedUser})\n    }, alert(\"Account succesfully updated\"))\n  }\n\n  handleFollowClick =(stream) =>{\n    const body={followed_name: stream.user_name}\n    fetch(`https://code-stream.herokuapp.com/api/v1/users/${this.state.loggedInUser.id}/favorites`, {\n      method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n    })\n      this.setState({\n        followedUsers: [...this.state.followedUsers, stream.user_name]\n      })\n   }\n\n  handleUnFollowClick =(stream) =>{\n    fetch(`https://code-stream.herokuapp.com/api/v1/users/${this.state.loggedInUser.id}/favorites`)\n    .then(resp => resp.json())\n    .then(favorites =>{\n      const favorite = favorites.find(fave => (fave.followed_username === stream.user_name))\n      fetch(`https://code-stream.herokuapp.com/api/v1/users/${this.state.loggedInUser.id}/favorites/${favorite.id}`,\n        { method: \"DELETE\"})\n    })\n    this.setState({\n      followedUsers: this.state.followedUsers.filter(name => (\n        name !== stream.user_name\n      ))\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n          <Route\n            path=\"/\"\n            render={props => (\n              <NavBar {...props}\n                loggedInUser={this.state.loggedInUser}\n                setLoggedInUser={this.setLoggedInUser}\n                loggedIn={this.state.loggedIn}\n                signOut={this.signOut}\n              />\n            )}\n          />\n          <Route exact path ='/'\n            render={(props) => <Home {...props}\n              loggedInUser={this.state.loggedInUser}\n              handleFollowClick={this.handleFollowClick}\n              handleUnFollowClick={this.handleUnFollowClick}\n              followedUsers={this.state.followedUsers}\n              faveVids={this.state.faveVids}\n              loggedIn={this.state.loggedIn}\n              />\n            }\n          />\n          <Route exact path ='/signup'\n            render={(props) => <SignUp {...props}\n              loggedInUser={this.state.loggedInUser}\n              setLoggedInUser={this.setLoggedInUser}\n              />\n            }\n          />\n          <Route\n            exact path=\"/users/:id\"\n            render={(props) =>\n              <UserShow {...props}\n                loggedInUser={this.state.loggedInUser}\n                loggedIn={this.state.loggedIn}\n                handleFollowClick={this.handleFollowClick}\n                handleUnFollowClick={this.handleUnFollowClick}\n                followedUsers={this.state.followedUsers}\n              />\n            }\n          />\n          <Route\n            exact path=\"/users/:id/edit\"\n            render={(props) =>\n              <UserEdit {...props}\n                loggedInUser={this.state.loggedInUser}\n                handleUsernameChange ={this.handleUsernameChange}\n                submitChangeUsername={this.submitChangeUsername}\n                signOut={this.signOut}\n              />\n            }\n          />\n\n        </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport UserShow from './components/UserShow.js'\n\n\nReactDOM.render(<App/>,document.getElementById('root'))\n\nserviceWorker.unregister();\n"],"sourceRoot":""}